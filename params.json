{"name":"Date-time-helper","tagline":"Date Time Helper as a Zend Model","body":"Date-Time-Helper\r\n================\r\n<h2>Why</h2>\r\n\r\n<b>I am a lazy Coder</b>\r\n\r\nWhen I work ,I need to deal a lot issue with date and time , and I can not remember the PHP Stand Date Time Class functions\r\nThose functions have to many parameters to remember, so I wrote my own, now it is here\r\n\r\nSimple Example\r\n\r\n<b>Question</b>: I want to get the Date of Yesterday \r\n\r\nAnswer for PHP : \r\n\r\n<code>\r\n  date_default_timezone_set('Australia/Melbourne');<br />\r\n  $dateYest = date(\"Y-m-d\",strtotime('yesterday'));\r\n</code>\r\n\r\nAnswer for My Date Time Helper : \r\n\r\n<code>\r\n$dateYest = Model_DTHpr::dateYesterday();\r\n</code>\r\n\r\n\r\nDon't tel me you did not see the difference.\r\nPlease check my Wiki for Full Examples\r\n\r\n\r\n<h2>What</h2>\r\n\r\nThis tiny Class is combine of functions that you may need in \"Real Work\".\r\nIt contains some functions that you may need to write them \"again and again\" in your code.\r\nCheck the Function list see if you need it or not.\r\n\r\n<h2>Liciences</h2> \r\n\r\nUse and modify as your wish, comment and criticism is welcome.\r\nLet me know you have use it in your whatever \"project\", that is only thing I request.\r\nNo \"thanks\" request, <b>only want to know how many time my code are used.</b>\r\n\r\n<h2>How-To</h2>\r\n\r\n<b>Step 1</b>: Modify the Time Zone Setting String Before Using\r\n\r\n<b>Step 2</b>: Put the \"DHTpr.php\" File in the application/models folder (in Zend) , set correct permissions\r\n\r\n<b>Step 3</b>: Done,Enjoy!!\r\n\r\n\r\n<h2>Function List</h2>\r\n\r\n\r\nModel_DTHpr::dateToday()\r\n\r\ndateToday :  Return Today's Date in \"yyyy-mm-dd\" Format\r\n\r\nModel_DTHpr::dayToday()\r\n\r\ndayToday : Return Today's Day of the Week From 1(Monday) to 7(Sunday)   \r\n\r\nModel_DTHpr::dayLeft()\r\n\r\ndayLeft :  Return How Many Days Left To Next Week Monday\r\n\r\nModel_DTHpr::timeNow()\r\n\r\ntimeNow :  Return Current Time\r\n\r\nModel_DTHpr::dateYesterday()\r\n\r\ndateYesterday : Return Date of Yesterday\r\n\r\nModel_DTHpr::getThisWeekMonday()\r\n\r\ngetThisWeekMonday : Return Date of This Week Monday \r\n\r\nModel_DTHpr::getThisWeekSunday()\r\n\r\ngetThisWeekSunday : Return Date of This Week Sunday\r\n\r\nModel_DTHpr::getLastWeekMonday()\r\n\r\ngetLastWeekMonday : Return Date of Last Week Monday\r\n\r\nModel_DTHpr::getLastWeekSunday()\r\n\r\ngetLastWeekSunday : Return Date of Last Week Sunday\r\n\r\nModel_DTHpr::adjustDays()\r\n\r\nadjustDays : Return \"What Is The Date after 20 or 45 or X Days ?\"\r\n\r\nModel_DTHpr::adjustWeeks()\r\n\r\nadjustWeeks : Return \"What Is The Date after 3 or Y Weeks ?\"\r\n\r\nModel_DTHpr::adjustMonths()\r\n\r\nadjustMonths : Return \"What Is The Date after 3 months\" (I know this is stupid function,but you got to have it!! -- IN REAL WORLD)\r\n\r\nModel_DTHpr::adjustYears()\r\n\r\nadjustYears : Return \"What Is The Date after 100 Years\" (Same as above)\r\n\r\nModel_DTHpr::createDateArray()\r\n\r\ncreateDateArray : Create an array of Date from DateBegin To DateEnd like array(\"2013-08-11\",\"2013-08-12\",\"2013-08-13\")\r\n\r\nYou will really need it when you looping\r\n\r\nModel_DTHpr::transferToInt()\r\n\r\ntransferToInt : Transfer Date from \"yyyy-mm-dd\" Format to Int Seconds since the Unix Epoch (January 1 1970 00:00:00 GMT)\r\n\r\nModel_DTHpr::getMondayByDate()\r\n\r\ngetMondayByDate : Given a Date , Return Date Of Monday For That Week \r\n\r\nModel_DTHpr::getFirstDayOfTheMonth()\r\n\r\ngetFirstDayOfTheMonth : Given a Date , Return First Day For That Month\r\n\r\nModel_DTHpr::getLastDayOfTheMonth()\r\n\r\ngetLastDayOfTheMonth : Given a Date , Return Last Day For That Month (28,30,31 make a choice)\r\n\r\nModel_DTHpr::timeZoneSet()\r\n\r\ntimeZoneSet : Inline Function to Replace date_default_timezone_set()\r\n\r\n\r\n\r\n\r\n","google":"UA-8694539-6","note":"Don't delete this file! It's used internally to help with page regeneration."}